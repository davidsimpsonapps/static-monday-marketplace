name: Historic App Install Data Update

on:
  schedule:
    - cron: '0 0 * * *'  # Runs at 00:00 UTC every day
    # - cron: '0 0 * * 0'  # Runs at 00:00 UTC every Sunday
  workflow_dispatch:      # Allows manual triggering

jobs:
  update-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch latest install data
        run: |
          curl "https://monday-apps-ms.monday.com/apps_ms/public/app_analytics/app_installs" > new_installs.json

      - name: Process and merge data (using jq)
        run: |
          current_date=$(date +'%Y-%m-%d')

          # Process each app's data
          jq -r 'to_entries[] | {appId: .key, count: .value}' new_installs.json | while read -r line; do
            appId=$(echo "$line" | jq -r '.appId')
            count=$(echo "$line" | jq -r '.count')

            # Create or update the JSON file
            if [ -f "data/${appId}.json" ]; then
              # Merge with existing data
              jq \
                --arg date "$current_date" \
                --argjson count "$count" \
                '
                  .installHistory |= (
                    if any(.date == $date) then
                      map(if .date == $date then
                        .count = $count  # Overwrite if same date
                      else . end)
                    else
                      . + [{
                        date: $date,
                        count: $count
                      }]
                    end
                  )
                ' "data/${appId}.json" > "tmp.json" && mv "tmp.json" "src/_data/json/installs/apps/${appId}.json"
            else
              # Create new file
              jq -n \
                --arg appId "$appId" \
                --arg date "$current_date" \
                --argjson count "$count" \
                '{
                  appId: $appId,
                  installHistory: [{
                    date: $date,
                    count: $count
                  }]
                }' > "data/${appId}.json"
            fi
          done

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add data/
          git commit -m "Weekly app install data update - $(date +'%Y-%m-%d')"
          git push
